"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[998],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(n),m=o,g=c["".concat(l,".").concat(m)]||c[m]||d[m]||a;return n?r.createElement(g,i(i({ref:t},u),{},{components:n})):r.createElement(g,i({ref:t},u))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},21434:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var r=n(87462),o=(n(67294),n(3905));const a={sidebar_position:1},i="Loading Textures",s={unversionedId:"Sprites/loading-textures",id:"Sprites/loading-textures",title:"Loading Textures",description:"To load file formats such as PNGs, WebPs, etc., OSGL uses its own external tool. The tool is bundled with OSGL on the github releases page, here, named image-converter (previously converter). Pick the one for your OS. If you don't know which to pick, feel free to ask us!",source:"@site/docs/Sprites/loading-textures.md",sourceDirName:"Sprites",slug:"/Sprites/loading-textures",permalink:"/osgl-graphics/docs/Sprites/loading-textures",draft:!1,editUrl:"https://github.com/Gunshot-Sound-Studios/osgl-graphics/edit/main/docs/Sprites/loading-textures.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"defaultSidebar",previous:{title:"Managing & Rendering to a window",permalink:"/osgl-graphics/docs/Windows/managing-and-rendering-to-a-window"},next:{title:"Rendering with sprites",permalink:"/osgl-graphics/docs/Sprites/rendering-with-sprites"}},l={},p=[],u={toc:p},c="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(c,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"loading-textures"},"Loading Textures"),(0,o.kt)("p",null,"To load file formats such as ",(0,o.kt)("inlineCode",{parentName:"p"},"PNGs"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"WebPs"),", etc., OSGL uses its own external tool. The tool is bundled with OSGL on the github releases page, ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Gunshot-Sound-Studios/osgl-graphics/releases/latest"},"here"),", named ",(0,o.kt)("inlineCode",{parentName:"p"},"image-converter")," (previously ",(0,o.kt)("inlineCode",{parentName:"p"},"converter"),"). Pick the one for your OS. If you don't know which to pick, feel free to ask us!"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"You can get help with the ",(0,o.kt)("inlineCode",{parentName:"p"},"image-converter")," exe by running it in the command-prompt, with the ",(0,o.kt)("inlineCode",{parentName:"p"},"-h")," flag! e.g:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"> image-converter -h\n"))),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"image-converter")," turns these image formats into OSGLs custom image-format, which you can learn more about ",(0,o.kt)("a",{parentName:"p",href:"./custom-texture-format"},"here"),"."),(0,o.kt)("p",null,"We can load textures into OSGL with the ",(0,o.kt)("inlineCode",{parentName:"p"},"texture.from")," function, which takes the texture generated by the ",(0,o.kt)("inlineCode",{parentName:"p"},"image-converter"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},'local OSGL = require(path.to.osgl)\nlocal texture = OSGL.texture\n\u200b\nlocal txt = texture.from(script.ModuleThatReturnsTexture)\n-- "txt" now contains OSGL-Texture data\n')),(0,o.kt)("p",null,"You can also create a blank texture of the given width, and height, with the ",(0,o.kt)("inlineCode",{parentName:"p"},"texture.new")," function:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},"local OSGL = require(path.to.osgl)\nlocal texture = OSGL.texture\n\u200b\nlocal txt = texture.new(50, 50) -- Creates a 50x50 texture\n")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Remember, like ",(0,o.kt)("inlineCode",{parentName:"p"},"Window"),"s, ",(0,o.kt)("inlineCode",{parentName:"p"},"Texture"),"s can also be drawn to! You can edit a texture like any other window by passing it as the first argument of a ",(0,o.kt)("inlineCode",{parentName:"p"},"draw")," function.")))}d.isMDXComponent=!0}}]);