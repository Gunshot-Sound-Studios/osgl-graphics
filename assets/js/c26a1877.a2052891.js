"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[267],{22974:e=>{e.exports=JSON.parse('{"functions":[{"name":"pixel","desc":"Draws a singular pixel at the given location\\n ```lua\\nlocal OSGL = require(path.to.osgl)\\nlocal draw = OSGL.draw\\nlocal Window = OSGL.Window\\nlocal color = OSGL.color\\n\\n-- Creates a new EditableImage\\nlocal myWindow = Window.new(path.to.parent, { sizeX = 50, sizeY = 50 })\\n\\n-- Runs every heartbeat\\nwhile myWindow:IsOpen() do\\n    -- Render here\\n    -- Draws a pixel at 0, 0, with a red color, onto \\"myWindow\\"\\n    draw.pixel(myWindow, 0, 0, color.RED)\\n    -- Stop rendering here\\n\\n    myWindow:Render()\\nend\\n\\nprint(\\"The window has been destroyed.\\")\\n```","params":[{"name":"window","desc":"The window or texture to draw on","lua_type":"DrawableObject"},{"name":"xPos","desc":"The X-Position of the pixel,","lua_type":"number"},{"name":"yPos","desc":"The Y-Position of the pixel","lua_type":"number"},{"name":"color","desc":"The color of the pixel","lua_type":"Color"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"static","errors":[{"lua_type":"\\"X\\"","desc":"This error occurs if the X is less than 0"},{"lua_type":"\\"Y\\"","desc":"This error occurs if the Y is less than 0"}],"source":{"line":74,"path":"src/draw/init.luau"}},{"name":"line","desc":"Draws a line from point A to point B\\n```lua\\nlocal OSGL = require(path.to.osgl)\\nlocal draw = OSGL.draw\\nlocal Window = OSGL.Window\\nlocal color = OSGL.color\\n\\n-- Creates a new EditableImage\\nlocal myWindow = Window.new(path.to.parent, { sizeX = 50, sizeY = 50 })\\n\\n-- Runs every heartbeat\\nwhile myWindow:IsOpen() do\\n    -- Render here\\n    -- Draws a red line from 0,0 to 29,29\\n    draw.line(myWindow, {\\n        startX = 0,\\n        startY = 0,\\n        stopX = 29,\\n        stopY = 29,\\n\\n        -- Thickness defaults to 1\\n        -- Color defaults to black\\n        color = color.RED\\n    })\\n    -- Stop rendering here\\n\\n    myWindow:Render()\\nend\\n\\nprint(\\"The window has been destroyed.\\")\\n```","params":[{"name":"window","desc":"The window or texture to draw on","lua_type":"DrawableObject"},{"name":"line","desc":"The data that is used to construct the line","lua_type":"{ startX: number, startY: number, stopX: number, stopY: number, thickness: number, color: Color? }"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"static","source":{"line":122,"path":"src/draw/init.luau"}},{"name":"circle","desc":"Draws a circle with an optional stroke onto the screen\\n```lua\\nlocal OSGL = require(path.to.osgl)\\nlocal Draw = OSGL.draw\\nlocal Window = OSGL.Window\\nlocal color = OSGL.color\\n\\n-- Creates a new EditableImage\\nlocal myWindow = Window.new(path.to.parent, { sizeX = 50, sizeY = 50 })\\n\\n-- Runs every heartbeat\\nwhile myWindow:IsOpen() do\\n    -- Render here\\n    -- Draw our circle\\n    myWindow:Clear(color.TRANSPARENT)\\n    draw.circle(myWindow, {\\n        centerX = 25,\\n        centerY = 25,\\n        radius = 10,\\n        fillColor = color.RED,\\n\\n        -- Rotation defaults to 0.\\n        -- Strokes are completely optional\\n        strokeColor = color.BLACK,\\n        strokeThickness = 2\\n    })\\n    -- Stop rendering here\\n\\n    myWindow:Render()\\nend\\n\\nprint(\\"The window has been destroyed.\\")\\n```","params":[{"name":"window","desc":"The window or texture to draw on","lua_type":"DrawableObject"},{"name":"circle","desc":"The data that is used to construct the circle","lua_type":"{centerX: number, centerY: number, radius: number, fillColor: Color?, strokeColor: Color?, strokeThickness: number?, rotation: number?}"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"static","source":{"line":164,"path":"src/draw/init.luau"}},{"name":"rectangle","desc":"Draws a rectangle with an optional stroke on the screen\\n\\n```lua\\nlocal OSGL = require(path.to.osgl)\\nlocal draw = OSGL.draw\\nlocal Window = OSGL.Window\\nlocal color = OSGL.color\\n\\n-- Creates a new EditableImage\\nlocal myWindow = Window.new(path.to.parent, { sizeX = 50, sizeY = 50 })\\n\\n-- Runs every heartbeat\\nwhile myWindow:IsOpen() do\\n\\t-- Render here\\n\\t-- Draws a square (5x5) at 0, 0, with a red color, onto \\"myWindow\\"\\n\\tdraw.rectangle(myWindow, {\\n\\t\\txPos = 0,\\n\\t\\tyPos = 0,\\n\\t\\twidth = 5,\\n\\t\\theight = 5,\\n\\t\\tfillColor = color.RED,\\n\\n\\t\\t-- Rotation defaults to 0.\\n\\t\\t-- Strokes are completely optional\\n\\t\\tstrokeColor = color.BLACK,\\n\\t\\tstrokeThickness = 2\\n\\t})\\n\\t-- Stop rendering here\\n\\n\\tmyWindow:Render()\\nend\\n\\nprint(\\"The window has been destroyed.\\")\\n```","params":[{"name":"window","desc":"The window or texture to draw on","lua_type":"DrawableObject"},{"name":"rectangle","desc":"The data that is used to construct the rectangle","lua_type":"{xPos: number, yPos: number, width: number, height: number, fillColor: Color?, strokeColor: Color?, strokeThickness: number?, rotation: number?}"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"static","source":{"line":208,"path":"src/draw/init.luau"}},{"name":"points","desc":"Draws a shape from the given points\\n\\n```lua\\nlocal OSGL = require(path.to.osgl)\\nlocal draw = OSGL.draw\\nlocal Window = OSGL.Window\\nlocal color = OSGL.color\\n\\n-- Creates a new EditableImage\\nlocal myWindow = Window.new(path.to.parent, { sizeX = 50, sizeY = 50 })\\n\\n-- An array of points (x, y)\\nlocal points = { { 0, 0 }, { 6, 0 }, { 6, 6 }, { 0, 6 }, }\\n-- Runs every heartbeat\\nwhile myWindow:IsOpen() do\\n\\t-- Render here\\n\\t-- Draws a square at 0, 0, with a red color, onto \\"myWindow\\"\\n\\tdraw.points(myWindow, {\\n\\t\\tpoints = points,\\n\\t\\tcolor = color.RED,\\n\\t\\tx = 0,\\n\\t\\ty = 0,\\n\\t})\\n\\t-- Stop rendering here\\n\\n\\tmyWindow:Render()\\nend\\n\\nprint(\\"The window has been destroyed.\\")\\n```","params":[{"name":"window","desc":"The window or texture to draw on","lua_type":"DrawableObject"},{"name":"points","desc":"The data which is used to construct the shape","lua_type":"{ x: number, y: number, points: Points, fillColor: Color }"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"static","errors":[{"lua_type":"\\"X\\"","desc":"This error occurs if the X is smaller than 0"},{"lua_type":"\\"Y\\"","desc":"This error occurs if the Y is smaller than 0"},{"lua_type":"\\"Points\\"","desc":"This error occurs if 2 or less points are provided"}],"source":{"line":251,"path":"src/draw/init.luau"}}],"properties":[],"types":[{"name":"Points","desc":"An array of points\\r","lua_type":"{ {number} }","source":{"line":128,"path":"src/types.luau"}}],"name":"Draw","desc":"The draw class. Contains functions that manipulates pixels\\non an OSGL window.","source":{"line":39,"path":"src/draw/init.luau"}}')}}]);