"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[47],{44266:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>a,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"Textures/custom-texture-format","title":"Custom OSGL Image Format","description":"This format is used internally by OSGL and is not related to rendering images on the screen. If you\'re interested in the file structure, please continue reading.","source":"@site/docs/Textures/custom-texture-format.md","sourceDirName":"Textures","slug":"/Textures/custom-texture-format","permalink":"/osgl/docs/Textures/custom-texture-format","draft":false,"unlisted":false,"editUrl":"https://github.com/osgl-rbx/osgl/edit/main/docs/Textures/custom-texture-format.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"defaultSidebar","previous":{"title":"Rendering Textures","permalink":"/osgl/docs/Textures/rendering-textures"},"next":{"title":"Loading Videos","permalink":"/osgl/docs/Videos/loading-videos"}}');var r=s(74848),i=s(28453);const o={sidebar_position:3},d="Custom OSGL Image Format",l={},c=[{value:"Colors",id:"colors",level:2},{value:"Byte Layout of the Color",id:"byte-layout-of-the-color",level:2}];function h(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"custom-osgl-image-format",children:"Custom OSGL Image Format"})}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsx)(n.p,{children:"This format is used internally by OSGL and is not related to rendering images on the screen. If you're interested in the file structure, please continue reading."})}),"\n",(0,r.jsxs)(n.p,{children:["An OSGL texture is generated by ",(0,r.jsx)(n.code,{children:"image-converter"}),". The texture, represented as a dictionary, contains three keys:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"width"}),": The width of the texture as a ",(0,r.jsx)(n.code,{children:"number"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"height"}),": The height of the texture as a ",(0,r.jsx)(n.code,{children:"number"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"pixels"}),": The raw pixel data of the texture as a ",(0,r.jsx)(n.code,{children:"buffer"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"colors",children:"Colors"}),"\n",(0,r.jsxs)(n.p,{children:["Colors are stored as 32-bit unsigned integers (",(0,r.jsx)(n.code,{children:"u32"}),"). This allows for compact representation and fast manipulation of colors as single numbers."]}),"\n",(0,r.jsx)(n.p,{children:"Each 32-bit color value consists of four 8-bit components: Red, Green, Blue, and Alpha (opacity). These components are packed into the 32-bit integer, with each component occupying one byte (8 bits)."}),"\n",(0,r.jsx)(n.h2,{id:"byte-layout-of-the-color",children:"Byte Layout of the Color"}),"\n",(0,r.jsx)(n.p,{children:"The four components are stored in the following order, from the most significant byte to the least significant byte:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"First byte"})," (bits 1-8): Red (R)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Second byte"})," (bits 9-16): Green (G)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Third byte"})," (bits 17-24): Blue (B)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Fourth byte"})," (bits 25-32): Alpha (A)"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This can be visualized as:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"R"}),(0,r.jsx)(n.th,{children:"G"}),(0,r.jsx)(n.th,{children:"B"}),(0,r.jsx)(n.th,{children:"A"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"8 bits"}),(0,r.jsx)(n.td,{children:"8 bits"}),(0,r.jsx)(n.td,{children:"8 bits"}),(0,r.jsx)(n.td,{children:"8 bits"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"1-8"}),(0,r.jsx)(n.td,{children:"9-16"}),(0,r.jsx)(n.td,{children:"17-24"}),(0,r.jsx)(n.td,{children:"25-32"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"For example, consider a color with the following components:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Red (",(0,r.jsx)(n.strong,{children:"R"}),"): 255 (",(0,r.jsx)(n.code,{children:"0xFF"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["Green (",(0,r.jsx)(n.strong,{children:"G"}),"): 128 (",(0,r.jsx)(n.code,{children:"0x80"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["Blue (",(0,r.jsx)(n.strong,{children:"B"}),"): 64 (",(0,r.jsx)(n.code,{children:"0x40"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["Alpha (",(0,r.jsx)(n.strong,{children:"A"}),"): 255 (",(0,r.jsx)(n.code,{children:"0xFF"}),")"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"These components would be packed into a 32-bit integer as follows:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Red (",(0,r.jsx)(n.strong,{children:"R"}),"): 255 (",(0,r.jsx)(n.code,{children:"0xFF"}),") -> Occupies bits 24-31"]}),"\n",(0,r.jsxs)(n.li,{children:["Green (",(0,r.jsx)(n.strong,{children:"G"}),"): 128 (",(0,r.jsx)(n.code,{children:"0x80"}),") -> Occupies bits 16-23"]}),"\n",(0,r.jsxs)(n.li,{children:["Blue (",(0,r.jsx)(n.strong,{children:"B"}),"): 64 (",(0,r.jsx)(n.code,{children:"0x40"}),") -> Occupies bits 8-15"]}),"\n",(0,r.jsxs)(n.li,{children:["Alpha (",(0,r.jsx)(n.strong,{children:"A"}),"): 255 (",(0,r.jsx)(n.code,{children:"0xFF"}),") -> Occupies bits 0-7"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["The resulting 32-bit integer representation would be: ",(0,r.jsx)(n.code,{children:"0xFF8040FF"})," (",(0,r.jsx)(n.code,{children:"4286595327"}),")."]})]})}function a(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>d});var t=s(96540);const r={},i=t.createContext(r);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);