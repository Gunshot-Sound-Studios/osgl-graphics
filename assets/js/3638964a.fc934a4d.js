"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[313],{16428:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"Shapes/drawing-shapes","title":"Drawing Shapes","description":"Below is a list of shapes in OSGL as of version 1.4b:","source":"@site/docs/Shapes/drawing-shapes.md","sourceDirName":"Shapes","slug":"/Shapes/drawing-shapes","permalink":"/osgl/docs/Shapes/drawing-shapes","draft":false,"unlisted":false,"editUrl":"https://github.com/osgl-rbx/osgl/edit/main/docs/Shapes/drawing-shapes.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"defaultSidebar","previous":{"title":"Opening a Window","permalink":"/osgl/docs/rendering-to-a-window"},"next":{"title":"Loading Textures","permalink":"/osgl/docs/Textures/loading-textures"}}');var t=n(74848),d=n(28453);const i={sidebar_position:1},o="Drawing Shapes",l={},a=[];function c(e){const s={code:"code",em:"em",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"drawing-shapes",children:"Drawing Shapes"})}),"\n",(0,t.jsxs)(s.p,{children:["Below is a list of shapes in OSGL as of version ",(0,t.jsx)(s.code,{children:"1.4b"}),":"]}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Shape"}),(0,t.jsx)(s.th,{children:"Supported"}),(0,t.jsx)(s.th,{children:"Supports Rotation"}),(0,t.jsx)(s.th,{children:"Supports Stroke"}),(0,t.jsx)(s.th,{children:"Notes"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Pixel"}),(0,t.jsx)(s.td,{children:"\u2705"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.em,{children:"N/A"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.em,{children:"N/A"})}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Rectangle"}),(0,t.jsx)(s.td,{children:"\u2705"}),(0,t.jsx)(s.td,{children:"\u2705"}),(0,t.jsx)(s.td,{children:"\u2705"}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Circle"}),(0,t.jsx)(s.td,{children:"\u2705"}),(0,t.jsx)(s.td,{children:"\u2705"}),(0,t.jsx)(s.td,{children:"\u2705"}),(0,t.jsx)(s.td,{children:"Rotation is only visible at low resolutions."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Lines"}),(0,t.jsx)(s.td,{children:"\u2705"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.em,{children:"N/A"})}),(0,t.jsx)(s.td,{children:"\u274c"}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Polygon"}),(0,t.jsx)(s.td,{children:"\u2705"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.em,{children:"N/A"})}),(0,t.jsx)(s.td,{children:"\u2705"}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Triangle"}),(0,t.jsx)(s.td,{children:"\u2705"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.em,{children:"N/A"})}),(0,t.jsx)(s.td,{children:"\u2705"}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Flood Fill"}),(0,t.jsx)(s.td,{children:"\u2705"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.em,{children:"N/A"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.em,{children:"N/A"})}),(0,t.jsx)(s.td,{children:"Dynamic shape that fills an area"})]})]})]}),"\n",(0,t.jsxs)(s.p,{children:["All shape-drawing functions are accessible through the ",(0,t.jsx)(s.code,{children:"draw"})," sub-module of OSGL. The first argument for each function must be a ",(0,t.jsx)(s.code,{children:"DrawableObject"}),", which can be either a ",(0,t.jsx)(s.code,{children:"Window"})," or a ",(0,t.jsx)(s.code,{children:"Texture"}),". Additionally, you will need to provide the necessary parameters to define the shape, such as its position, size, and color."]}),"\n",(0,t.jsx)(s.p,{children:"Here is an example of how to draw a square, as defined by the documentation:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-lua",children:"local OSGL = require(path.to.osgl)\r\nlocal Window = OSGL.Window\r\nlocal color = OSGL.color\r\nlocal draw = OSGL.draw\r\n\r\n-- Creates a new EditableImage\r\nlocal myWindow = Window.new(path.to.parent, { sizeX = 50, sizeY = 50 })\r\n\r\n-- Draws a 5x5 red square at 0, 0 \r\ndraw.rectangle(myWindow, 0, 0, 5, 5, color.RED)\n"})}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Notes"}),":"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Rotation"}),": Most shapes support rotation, but in some cases (e.g., circles), the rotation is only visible at low resolutions."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Stroke"}),": For shapes that support strokes, you can define both the stroke color and thickness. However, strokes are entirely optional and can be omitted if not needed."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,d.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>o});var r=n(96540);const t={},d=r.createContext(t);function i(e){const s=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(d.Provider,{value:s},e.children)}}}]);