"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[166],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>g});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var p=n.createContext({}),l=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(r),m=i,g=d["".concat(p,".").concat(m)]||d[m]||u[m]||o;return r?n.createElement(g,a(a({ref:t},c),{},{components:r})):n.createElement(g,a({ref:t},c))}));function g(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[d]="string"==typeof e?e:i,a[1]=s;for(var l=2;l<o;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},10418:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var n=r(87462),i=(r(67294),r(3905));const o={sidebar_position:2},a="Rendering with sprites",s={unversionedId:"Sprites/rendering-with-sprites",id:"Sprites/rendering-with-sprites",title:"Rendering with sprites",description:"A texture on its own cannot directly be drawn to the screen. Instead, it can be applied to a Sprite, which can render itself on the screen.",source:"@site/docs/Sprites/rendering-with-sprites.md",sourceDirName:"Sprites",slug:"/Sprites/rendering-with-sprites",permalink:"/osgl-graphics/docs/Sprites/rendering-with-sprites",draft:!1,editUrl:"https://github.com/Gunshot-Sound-Studios/osgl-graphics/edit/main/docs/Sprites/rendering-with-sprites.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"defaultSidebar",previous:{title:"Loading Textures",permalink:"/osgl-graphics/docs/Sprites/loading-textures"},next:{title:"Custom OSGL Image-Format",permalink:"/osgl-graphics/docs/Sprites/custom-texture-format"}},p={},l=[],c={toc:l},d="wrapper";function u(e){let{components:t,...r}=e;return(0,i.kt)(d,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"rendering-with-sprites"},"Rendering with sprites"),(0,i.kt)("p",null,"A texture on its own cannot directly be drawn to the screen. Instead, it can be applied to a ",(0,i.kt)("inlineCode",{parentName:"p"},"Sprite"),", which can render itself on the screen."),(0,i.kt)("p",null,"Creating a sprite is as simple as:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"local OSGL = require(path.to.osgl)\nlocal Sprite = OSGL.Sprite\n\u200b\nlocal txt -- *load texture*\nlocal mySprite = Sprite.new(txt)\n")),(0,i.kt)("p",null,"You can then render these sprites to a window (or even another texture) by using its ",(0,i.kt)("inlineCode",{parentName:"p"},"Draw")," method:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"local OSGL = require(path.to.osgl)\nlocal Window = OSGL.Window\nlocal Sprite = OSGL.Sprite\n\u200b\n-- Creates a window from an existing EditableImage\nlocal myWindow = Window.from(path.to.editableImage, { sizeX = 50, sizeY = 50 })\n\nlocal txt = -- *load texture*\nlocal mySprite = Sprite.new(myWindow, txt)\nmySprite:Draw(myWindow)\n")),(0,i.kt)("p",null,"Sprites also have an X and Y, meaning you can change the position of the sprite on the screen."))}u.isMDXComponent=!0}}]);