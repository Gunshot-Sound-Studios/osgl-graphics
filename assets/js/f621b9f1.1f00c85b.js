"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[132],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),s=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},x=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(r),x=a,m=d["".concat(u,".").concat(x)]||d[x]||c[x]||o;return r?n.createElement(m,i(i({ref:t},p),{},{components:r})):n.createElement(m,i({ref:t},p))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=x;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[d]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}x.displayName="MDXCreateElement"},69364:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=r(87462),a=(r(67294),r(3905));const o={sidebar_position:2},i="Rendering Textures",l={unversionedId:"Textures/rendering-textures",id:"Textures/rendering-textures",title:"Rendering Textures",description:"In OSGL, Texture data is essentially a buffer (just like a Window). However, if you want to render a Texture onto another DrawableObject, such as a Window or another Texture, you can use the Texture.draw function:",source:"@site/docs/Textures/rendering-textures.md",sourceDirName:"Textures",slug:"/Textures/rendering-textures",permalink:"/osgl-graphics/docs/Textures/rendering-textures",draft:!1,editUrl:"https://github.com/Gunshot-Sound-Studios/osgl-graphics/edit/main/docs/Textures/rendering-textures.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"defaultSidebar",previous:{title:"Loading Textures",permalink:"/osgl-graphics/docs/Textures/loading-textures"},next:{title:"Custom OSGL Image-Format",permalink:"/osgl-graphics/docs/Textures/custom-texture-format"}},u={},s=[{value:"What&#39;s Happening Here?",id:"whats-happening-here",level:4},{value:"Drawing a Texture onto a Window",id:"drawing-a-texture-onto-a-window",level:3},{value:"Example: Combining Textures with layers",id:"example-combining-textures-with-layers",level:3}],p={toc:s},d="wrapper";function c(e){let{components:t,...r}=e;return(0,a.kt)(d,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"rendering-textures"},"Rendering Textures"),(0,a.kt)("p",null,"In OSGL, ",(0,a.kt)("inlineCode",{parentName:"p"},"Texture")," data is essentially a buffer (just like a ",(0,a.kt)("inlineCode",{parentName:"p"},"Window"),"). However, if you want to render a ",(0,a.kt)("inlineCode",{parentName:"p"},"Texture")," onto another ",(0,a.kt)("inlineCode",{parentName:"p"},"DrawableObject"),", such as a ",(0,a.kt)("inlineCode",{parentName:"p"},"Window")," or another ",(0,a.kt)("inlineCode",{parentName:"p"},"Texture"),", you can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"Texture.draw")," function:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"local OSGL = require(path.to.osgl)\nlocal Texture = OSGL.Texture\n\nlocal textureData = require(path.to.texture)\nlocal secondTextureData = require(path.to.secondTexture)\n\nlocal textureA = Texture.from(textureData)\nlocal textureB = Texture.from(secondTextureData)\n\n-- Draw textureB on textureA at (0, 0)\nlocal textureC = Texture.draw(textureA, textureB, 0, 0)\n")),(0,a.kt)("h4",{id:"whats-happening-here"},"What's Happening Here?"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Loading Textures: We load two textures, ",(0,a.kt)("inlineCode",{parentName:"li"},"textureA")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"textureB"),", using the ",(0,a.kt)("inlineCode",{parentName:"li"},"Texture.from")," function."),(0,a.kt)("li",{parentName:"ul"},"Drawing: The ",(0,a.kt)("inlineCode",{parentName:"li"},"Texture.draw")," function draws ",(0,a.kt)("inlineCode",{parentName:"li"},"textureB")," onto ",(0,a.kt)("inlineCode",{parentName:"li"},"textureA")," at position (0, 0). This operation    returns a new ",(0,a.kt)("inlineCode",{parentName:"li"},"Texture")," object, which we've assigned to ",(0,a.kt)("inlineCode",{parentName:"li"},"textureC"),".")),(0,a.kt)("p",null,"You can also perform this operation on a ",(0,a.kt)("inlineCode",{parentName:"p"},"Window"),". Remember: a ",(0,a.kt)("inlineCode",{parentName:"p"},"Window")," in OSGL is also a DrawableObject, which is a ",(0,a.kt)("inlineCode",{parentName:"p"},"Texture"),"."),(0,a.kt)("h3",{id:"drawing-a-texture-onto-a-window"},"Drawing a Texture onto a Window"),(0,a.kt)("p",null,"To render a ",(0,a.kt)("inlineCode",{parentName:"p"},"Texture")," onto a ",(0,a.kt)("inlineCode",{parentName:"p"},"Window"),", you can do the exact same thing:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"local OSGL = require(path.to.osgl)\nlocal Window = OSGL.Window\nlocal Texture = OSGL.Texture\n\n-- Create a new window\nlocal myWindow = Window.new(parent, { sizeX = 100, sizeY = 100 })\n\n-- Load a texture\nlocal textureData = require(path.to.texture)\nlocal myTexture = Texture.from(textureData)\n\n-- Draw the texture onto the window at position (10, 10)\nTexture.draw(myWindow, myTexture, 10, 10)\n\n-- Render the window to display it on the screen\nmyWindow:Render()\n")),(0,a.kt)("h3",{id:"example-combining-textures-with-layers"},"Example: Combining Textures with layers"),(0,a.kt)("p",null,"Using this knowledge, you can layer multiple ",(0,a.kt)("inlineCode",{parentName:"p"},"Texture")," objects onto a singular ",(0,a.kt)("inlineCode",{parentName:"p"},"DrawableObject")," like so:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"local OSGL = require(path.to.osgl)\nlocal Texture = OSGL.Texture\n\n-- Load base texture and 2 additional layers\nlocal baseTextureData = require(path.to.baseTexture)\nlocal layer1Data = require(path.to.layer1)\nlocal layer2Data = require(path.to.layer2)\n\nlocal baseTexture = Texture.from(baseTextureData)\nlocal layer1 = Texture.from(layer1Data)\nlocal layer2 = Texture.from(layer2Data)\n\n-- Draw layer1 onto the base texture at (20, 20)\nTexture.draw(baseTexture, layer1, 20, 20)\n\n-- Draw layer2 onto the updated base texture at (40, 40)\nTexture.draw(baseTexture, layer2, 40, 40)\n\n-- Now baseTexture contains both layers combined!\n")))}c.isMDXComponent=!0}}]);